{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Justicechain\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthService } from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in on app start\n    const checkAuth = () => {\n      const citizenAuth = AuthService.isAuthenticated('citizen');\n      const adminAuth = AuthService.isAuthenticated('admin');\n      if (citizenAuth) {\n        setUser(citizenAuth);\n      } else if (adminAuth) {\n        setUser(adminAuth);\n      }\n      setIsLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password, userType = 'citizen') => {\n    try {\n      console.log(`AuthContext: Attempting ${userType} login for ${email}`);\n      let result;\n      if (userType === 'citizen') {\n        result = await AuthService.loginCitizen(email, password);\n      } else {\n        result = await AuthService.loginAdmin(email, password);\n      }\n      console.log(`AuthContext: Login result:`, result);\n      if (result.success) {\n        setUser(result.user);\n        console.log(`AuthContext: User set in context:`, result.user);\n        return {\n          success: true,\n          user: result.user\n        };\n      } else {\n        console.log(`AuthContext: Login failed:`, result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (error) {\n      console.error(`AuthContext: Login error:`, error);\n      return {\n        success: false,\n        error: 'Login failed'\n      };\n    }\n  };\n  const logout = (userType = 'citizen') => {\n    AuthService.logout(userType);\n    setUser(null);\n  };\n  const signup = async (userData, userType = 'citizen') => {\n    try {\n      let result;\n      if (userType === 'citizen') {\n        result = AuthService.signupCitizen(userData);\n      } else {\n        result = AuthService.signupAdmin(userData);\n      }\n      return result;\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Signup failed'\n      };\n    }\n  };\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n  const value = {\n    user,\n    isLoading,\n    login,\n    logout,\n    signup,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AuthService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","checkAuth","citizenAuth","isAuthenticated","adminAuth","login","email","password","userType","console","log","result","loginCitizen","loginAdmin","success","error","logout","signup","userData","signupCitizen","signupAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/Justicechain/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthService } from '../utils/auth';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in on app start\n    const checkAuth = () => {\n      const citizenAuth = AuthService.isAuthenticated('citizen');\n      const adminAuth = AuthService.isAuthenticated('admin');\n      \n      if (citizenAuth) {\n        setUser(citizenAuth);\n      } else if (adminAuth) {\n        setUser(adminAuth);\n      }\n      \n      setIsLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email, password, userType = 'citizen') => {\n    try {\n      console.log(`AuthContext: Attempting ${userType} login for ${email}`);\n      let result;\n      if (userType === 'citizen') {\n        result = await AuthService.loginCitizen(email, password);\n      } else {\n        result = await AuthService.loginAdmin(email, password);\n      }\n      \n      console.log(`AuthContext: Login result:`, result);\n      if (result.success) {\n        setUser(result.user);\n        console.log(`AuthContext: User set in context:`, result.user);\n        return { success: true, user: result.user };\n      } else {\n        console.log(`AuthContext: Login failed:`, result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (error) {\n      console.error(`AuthContext: Login error:`, error);\n      return { success: false, error: 'Login failed' };\n    }\n  };\n\n  const logout = (userType = 'citizen') => {\n    AuthService.logout(userType);\n    setUser(null);\n  };\n\n  const signup = async (userData, userType = 'citizen') => {\n    try {\n      let result;\n      if (userType === 'citizen') {\n        result = AuthService.signupCitizen(userData);\n      } else {\n        result = AuthService.signupAdmin(userData);\n      }\n      \n      return result;\n    } catch (error) {\n      return { success: false, error: 'Signup failed' };\n    }\n  };\n\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n\n  const value = {\n    user,\n    isLoading,\n    login,\n    logout,\n    signup,\n    isAuthenticated\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,WAAW,GAAGhB,WAAW,CAACiB,eAAe,CAAC,SAAS,CAAC;MAC1D,MAAMC,SAAS,GAAGlB,WAAW,CAACiB,eAAe,CAAC,OAAO,CAAC;MAEtD,IAAID,WAAW,EAAE;QACfJ,OAAO,CAACI,WAAW,CAAC;MACtB,CAAC,MAAM,IAAIE,SAAS,EAAE;QACpBN,OAAO,CAACM,SAAS,CAAC;MACpB;MAEAJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,GAAG,SAAS,KAAK;IAC7D,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,2BAA2BF,QAAQ,cAAcF,KAAK,EAAE,CAAC;MACrE,IAAIK,MAAM;MACV,IAAIH,QAAQ,KAAK,SAAS,EAAE;QAC1BG,MAAM,GAAG,MAAMzB,WAAW,CAAC0B,YAAY,CAACN,KAAK,EAAEC,QAAQ,CAAC;MAC1D,CAAC,MAAM;QACLI,MAAM,GAAG,MAAMzB,WAAW,CAAC2B,UAAU,CAACP,KAAK,EAAEC,QAAQ,CAAC;MACxD;MAEAE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,MAAM,CAAC;MACjD,IAAIA,MAAM,CAACG,OAAO,EAAE;QAClBhB,OAAO,CAACa,MAAM,CAACd,IAAI,CAAC;QACpBY,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEC,MAAM,CAACd,IAAI,CAAC;QAC7D,OAAO;UAAEiB,OAAO,EAAE,IAAI;UAAEjB,IAAI,EAAEc,MAAM,CAACd;QAAK,CAAC;MAC7C,CAAC,MAAM;QACLY,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,MAAM,CAACI,KAAK,CAAC;QACvD,OAAO;UAAED,OAAO,EAAE,KAAK;UAAEC,KAAK,EAAEJ,MAAM,CAACI;QAAM,CAAC;MAChD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAe,CAAC;IAClD;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAACR,QAAQ,GAAG,SAAS,KAAK;IACvCtB,WAAW,CAAC8B,MAAM,CAACR,QAAQ,CAAC;IAC5BV,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMmB,MAAM,GAAG,MAAAA,CAAOC,QAAQ,EAAEV,QAAQ,GAAG,SAAS,KAAK;IACvD,IAAI;MACF,IAAIG,MAAM;MACV,IAAIH,QAAQ,KAAK,SAAS,EAAE;QAC1BG,MAAM,GAAGzB,WAAW,CAACiC,aAAa,CAACD,QAAQ,CAAC;MAC9C,CAAC,MAAM;QACLP,MAAM,GAAGzB,WAAW,CAACkC,WAAW,CAACF,QAAQ,CAAC;MAC5C;MAEA,OAAOP,MAAM;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAgB,CAAC;IACnD;EACF,CAAC;EAED,MAAMZ,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAON,IAAI,KAAK,IAAI;EACtB,CAAC;EAED,MAAMwB,KAAK,GAAG;IACZxB,IAAI;IACJE,SAAS;IACTM,KAAK;IACLW,MAAM;IACNC,MAAM;IACNd;EACF,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA1B,QAAA,EAChCA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,GAAA,CArFWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}