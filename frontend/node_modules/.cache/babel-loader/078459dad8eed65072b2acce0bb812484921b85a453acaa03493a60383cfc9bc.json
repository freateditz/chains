{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{AuthService}from'../utils/auth';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{// Check if user is already logged in on app start\nconst checkAuth=()=>{const citizenAuth=AuthService.isAuthenticated('citizen');const adminAuth=AuthService.isAuthenticated('admin');if(citizenAuth){setUser(citizenAuth);}else if(adminAuth){setUser(adminAuth);}setIsLoading(false);};checkAuth();},[]);const login=async function(email,password){let userType=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'citizen';try{console.log(\"AuthContext: Attempting \".concat(userType,\" login for \").concat(email));let result;if(userType==='citizen'){result=await AuthService.loginCitizen(email,password);}else{result=await AuthService.loginAdmin(email,password);}console.log(\"AuthContext: Login result:\",result);if(result.success){setUser(result.user);console.log(\"AuthContext: User set in context:\",result.user);return{success:true,user:result.user};}else{console.log(\"AuthContext: Login failed:\",result.error);return{success:false,error:result.error};}}catch(error){console.error(\"AuthContext: Login error:\",error);return{success:false,error:'Login failed'};}};const logout=function(){let userType=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'citizen';AuthService.logout(userType);setUser(null);};const signup=async function(userData){let userType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'citizen';try{let result;if(userType==='citizen'){result=AuthService.signupCitizen(userData);}else{result=AuthService.signupAdmin(userData);}return result;}catch(error){return{success:false,error:'Signup failed'};}};const isAuthenticated=()=>{return user!==null;};const value={user,isLoading,login,logout,signup,isAuthenticated};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AuthService","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","checkAuth","citizenAuth","isAuthenticated","adminAuth","login","email","password","userType","arguments","length","undefined","console","log","concat","result","loginCitizen","loginAdmin","success","error","logout","signup","userData","signupCitizen","signupAdmin","value","Provider"],"sources":["/app/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthService } from '../utils/auth';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in on app start\n    const checkAuth = () => {\n      const citizenAuth = AuthService.isAuthenticated('citizen');\n      const adminAuth = AuthService.isAuthenticated('admin');\n      \n      if (citizenAuth) {\n        setUser(citizenAuth);\n      } else if (adminAuth) {\n        setUser(adminAuth);\n      }\n      \n      setIsLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email, password, userType = 'citizen') => {\n    try {\n      console.log(`AuthContext: Attempting ${userType} login for ${email}`);\n      let result;\n      if (userType === 'citizen') {\n        result = await AuthService.loginCitizen(email, password);\n      } else {\n        result = await AuthService.loginAdmin(email, password);\n      }\n      \n      console.log(`AuthContext: Login result:`, result);\n      if (result.success) {\n        setUser(result.user);\n        console.log(`AuthContext: User set in context:`, result.user);\n        return { success: true, user: result.user };\n      } else {\n        console.log(`AuthContext: Login failed:`, result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (error) {\n      console.error(`AuthContext: Login error:`, error);\n      return { success: false, error: 'Login failed' };\n    }\n  };\n\n  const logout = (userType = 'citizen') => {\n    AuthService.logout(userType);\n    setUser(null);\n  };\n\n  const signup = async (userData, userType = 'citizen') => {\n    try {\n      let result;\n      if (userType === 'citizen') {\n        result = AuthService.signupCitizen(userData);\n      } else {\n        result = AuthService.signupAdmin(userData);\n      }\n      \n      return result;\n    } catch (error) {\n      return { success: false, error: 'Signup failed' };\n    }\n  };\n\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n\n  const value = {\n    user,\n    isLoading,\n    login,\n    logout,\n    signup,\n    isAuthenticated\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}